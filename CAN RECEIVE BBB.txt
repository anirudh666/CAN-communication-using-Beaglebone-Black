#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <net/if.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <sys/ioctl.h>
#include <iostream>
#include <linux/can.h>
#include <linux/can/raw.h>
using namespace std;

int s, st;
struct sockaddr_can addr;
struct can_frame frame;
struct ifreq ifr;

int read_frame()
{
        int nbytes = read(s, &frame, sizeof(struct can_frame));

        if (nbytes < 0)
        {
                cout<<"can frame raw socket read";
                return -1;
        }

        if (nbytes != sizeof(struct can_frame))
        {
                cout<<"incomplete can frame\n";
                return -1;
        }



        cout<<"\nCAN id : "<<frame.can_id;
        cout<<"\nData : ";
        for(int i=0;i<8;i++)
        {       int a = frame.data[i];
                cout<<a<<" ";
        }
        return 0;
}
int main()
{
        if((s = socket(PF_CAN, SOCK_RAW, CAN_RAW)) < 0)
        {
                cout<<"Error while opening socket";
        }

        strcpy(ifr.ifr_name, "can0");
        ioctl(s, SIOCGIFINDEX, &ifr);

        addr.can_family  = AF_CAN;
        addr.can_ifindex = ifr.ifr_ifindex;

        if(bind(s, (struct sockaddr *)&addr, sizeof(addr)) < 0)
        {
                perror("Error in socket bind");
        }
         while(1)
        {       st = read_frame();
                if(st!=0)
                {       cout<<"\nError during reading";
                }

        }
         return 1;
}
