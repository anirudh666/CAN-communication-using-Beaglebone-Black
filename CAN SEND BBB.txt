#include<iostream>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>

#include <net/if.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <sys/ioctl.h>

#include <linux/can.h>
#include <linux/can/raw.h>
using namespace std;

int main()
{
        int s;
        int nbytes;
        struct sockaddr_can addr;
        struct can_frame frame;
        struct ifreq ifr;

        if((s = socket(PF_CAN, SOCK_RAW, CAN_RAW)) < 0) {
                cout<<"Error while opening socket";
        }

        strcpy(ifr.ifr_name, "can0");
        ioctl(s, SIOCGIFINDEX, &ifr);

        addr.can_family  = AF_CAN;
        addr.can_ifindex = ifr.ifr_ifindex;

        cout<<"Can0 at index "<<ifr.ifr_ifindex;

        if(bind(s, (struct sockaddr *)&addr, sizeof(addr)) < 0) {
                cout<<"Error in socket bind ";
         }

        frame.can_id  = 0x5A1;
        frame.can_dlc = 8;
        frame.data[0] = 0x11;
        frame.data[1] = 0x22;
        frame.data[2] = 0x33;
        frame.data[3] = 0x44;
        frame.data[4] = 0x55;
        frame.data[5] = 0x66;
        frame.data[6] = 0x77;
        frame.data[7] = 0x88;

        while(1)
        {
                nbytes = write(s, &frame, sizeof(struct can_frame));
                if(nbytes < 0)cout<<"Error in writing ";

        }

        return 0;
}


